<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-lazy-init="false">

	<!-- 权限管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroDbRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<!-- 缓存管理器 -->
		 
		 <property name="cacheManager" ref="redisCacheManager" />
	</bean>

	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 超时时间 -->
		<property name="globalSessionTimeout" value="3600000" />
		<property name="sessionDAO" ref="shiroSessionDao" />
		<property name="sessionIdCookie" ref="sharesession" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
		<!-- 定时检查失效的session -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
	</bean>

	<bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="SHAREJSESSIONID" />
	</bean>
	<bean id="shiroSessionDao"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO" />

	<!-- 单机session -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
	
	<!--
	定时清理僵尸session，Shiro会启用一个后台守护线程定时执行清理操作
	用户直接关闭浏览器造成的孤立会话
	-->
	<bean id="sessionValidationScheduler"
	      class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
	    <property name="interval" value="3600000"/>
	    <property name="sessionManager" ref="sessionManager"/>
	</bean>

	<!-- session 集群 -->
	<!-- <bean id="shiroCacheManager" class="org.springrain.frame.shiro.ShiroRedisCacheManager" 
		> <property name="cached" ref="redisCached" /> </bean> -->
	<bean id="kickoutSessionControlFilter" class="com.ync365.seed.admin.security.shiro.KickoutSessionControlFilter">
		<property name="cacheManager" ref="shiroCacheManager" />
		<property name="sessionManager" ref="sessionManager" />  <!-- 用于根据会话ID，获取会话进行踢出操作的； -->

		<property name="kickoutAfter" value="false" />  <!-- 是否踢出后来登录的，默认是false；即后者登录的用户踢出前者登录的用户； -->
		<property name="maxSession" value="1" />  <!-- 同一个用户最大的会话数，默认1；比如2的意思是同一个用户允许最多同时两个人登录； -->
		<property name="kickoutUrl" value="/login" />  <!-- 被踢出后重定向到的地址； -->
	</bean>


	<bean id="shiroSecurityFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean"
		depends-on="frameperms">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/index" />
		<property name="unauthorizedUrl" value="/noAuth" />
		<property name="filterChainDefinitions">
			<value>
				/resources/** = anon
				/error/** = authc
				/index = anon
				/viewAllContacts = authc,kickout	<!-- 系统后台主页 -->
				/viewLeftMenuJson.do=user	<!-- 系统左侧菜单查询 -->

				/competencesys.do= user	<!-- 无权限页面 -->
				/category/**= anon			<!-- 系统后台右侧首页 -->
				/feature/**= anon
				/specFeature/**= anon
				/goods/**= anon
				/brand/**= anon
				/sku/**= anon
				/goodsQuery/**= anon
				/region/**= anon
				/goodsview/**= anon
				/upload/**=anon
	 			/promotionGift/**= anon
				/logout = anon
				/noAuth.do = anon
				/login = anon
				/getout.do = anon 	<!-- 重复登录踢出 -->
				/loginValid = anon	<!-- 登录验证 -->
				/**/ajax/** = user
				/** = kickout,user,frameperms
			</value>
		</property>
		<!-- 声明自定义的过滤器 -->
		<property name="filters">
			<map>
				<entry key="frameperms" value-ref="frameperms"></entry>
				<entry key="kickout" value-ref="kickoutSessionControlFilter" />
			</map>

		</property>


	</bean>


	 <bean id="redisCache" class="com.ync365.seed.commons.shiro.RedisCache"><!-- 自定义cacheManager -->
	    <constructor-arg ref="redisManager"></constructor-arg>
	 </bean>
	 <bean id="redisCacheManager" class="com.ync365.seed.commons.shiro.RedisCacheManager"><!-- 自定义cacheManager -->
        <property name="redisManager" ref="redisManager" />
     </bean>
     <bean id="redisShiroSessionDAO" class="com.ync365.seed.commons.shiro.RedisSessionDAO">
        <property name="redisManager" ref="redisManager" />
    </bean>
     <bean id="redisManager" class="com.ync365.seed.commons.shiro.RedisManager">
     	<property name="jedisPool" ref="jedisPool"></property>
     </bean>
     
     <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		  <!-- 说明一个pool可以有多少个Jedis实例 -->
		   
		  <!-- 最大Idle-->
		  <property name="maxIdle" value="5" />
		  <!-- 最小Idle -->
		  <property name="minIdle" value="1" />
		  <!-- 获得一个jedis实例的时候是否检查连接可用性（ping()） -->
		  <property name="testOnBorrow" value="true" />
		  <!-- return 一个jedis实例给pool时，是否检查连接可用性（ping()） -->
		  <property name="testOnReturn" value="true" />
		  <!-- idle状态监测用异步线程evict进行检查， -->
		  <property name="testWhileIdle" value="true" />
		  <!-- 一次最多evict的pool里的jedis实例个数 -->
		  <property name="numTestsPerEvictionRun" value="10" />
		  <!-- test idle 线程的时间间隔 -->
		  <property name="timeBetweenEvictionRunsMillis" value="60000" />
		  <!--最大等待wait时间-->
	</bean>
	
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
        <constructor-arg index="0" value="127.0.0.1"/>
        <constructor-arg index="1" value="6379"/>
	</bean>

	<!-- 起效权限注解,这个很少在web项目中用到,一般是控制url的访问,不是在controller中声明权限注解 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>